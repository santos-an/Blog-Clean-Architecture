// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence.Database;

#nullable disable

namespace Persistence.Migrations
{
    [DbContext(typeof(DatabaseService))]
    [Migration("20221116142350_v2")]
    partial class v2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0-preview.5.22302.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Model.Comment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Author")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("PostId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("Model.Post", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .HasMaxLength(1200)
                        .HasColumnType("nvarchar(1200)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Posts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4039784d-e731-4576-9307-1e42640c078f"),
                            Content = "Content 1",
                            CreationDate = new DateTime(2022, 11, 16, 14, 23, 50, 112, DateTimeKind.Local).AddTicks(8928),
                            Title = "Title 1"
                        },
                        new
                        {
                            Id = new Guid("105b2918-beaa-4805-8c17-f2933176d548"),
                            Content = "Content 2",
                            CreationDate = new DateTime(2022, 11, 16, 14, 23, 50, 115, DateTimeKind.Local).AddTicks(9726),
                            Title = "Title 2"
                        },
                        new
                        {
                            Id = new Guid("d8ac5fb4-9877-42d8-8548-fde274e129d8"),
                            Content = "Content 3",
                            CreationDate = new DateTime(2022, 11, 16, 14, 23, 50, 115, DateTimeKind.Local).AddTicks(9748),
                            Title = "Title 3"
                        },
                        new
                        {
                            Id = new Guid("5d715555-cd59-4ed4-9e07-5b15ee958611"),
                            Content = "Content 4",
                            CreationDate = new DateTime(2022, 11, 16, 14, 23, 50, 115, DateTimeKind.Local).AddTicks(9751),
                            Title = "Title 4"
                        },
                        new
                        {
                            Id = new Guid("d2df2b9a-45ed-40fe-bc96-1181552fb21f"),
                            Content = "Content 5",
                            CreationDate = new DateTime(2022, 11, 16, 14, 23, 50, 115, DateTimeKind.Local).AddTicks(9754),
                            Title = "Title 5"
                        });
                });

            modelBuilder.Entity("Model.Comment", b =>
                {
                    b.HasOne("Model.Post", "Post")
                        .WithMany("Comments")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Post");
                });

            modelBuilder.Entity("Model.Post", b =>
                {
                    b.Navigation("Comments");
                });
#pragma warning restore 612, 618
        }
    }
}
