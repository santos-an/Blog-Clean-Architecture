// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence.Database;

#nullable disable

namespace Persistence.Migrations
{
    [DbContext(typeof(DatabaseService))]
    [Migration("20221116142700_v3")]
    partial class v3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0-preview.5.22302.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Model.Comment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Author")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("PostId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("Model.Post", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .HasMaxLength(1200)
                        .HasColumnType("nvarchar(1200)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Posts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0c12c646-30df-4595-9fe4-b59611161072"),
                            Content = "Content 1",
                            CreationDate = new DateTime(2022, 11, 16, 14, 26, 59, 678, DateTimeKind.Local).AddTicks(7714),
                            Title = "Post 1"
                        },
                        new
                        {
                            Id = new Guid("6502aadc-0400-4236-abe6-e0a0fa46cc08"),
                            Content = "Content 2",
                            CreationDate = new DateTime(2022, 11, 16, 14, 26, 59, 681, DateTimeKind.Local).AddTicks(7142),
                            Title = "Post 2"
                        },
                        new
                        {
                            Id = new Guid("bd5fa502-61e9-4638-b7b5-6fa89797c6e5"),
                            Content = "Content 3",
                            CreationDate = new DateTime(2022, 11, 16, 14, 26, 59, 681, DateTimeKind.Local).AddTicks(7163),
                            Title = "Post 3"
                        },
                        new
                        {
                            Id = new Guid("a4c9eb18-4809-4290-b473-b4d3a3677b46"),
                            Content = "Content 4",
                            CreationDate = new DateTime(2022, 11, 16, 14, 26, 59, 681, DateTimeKind.Local).AddTicks(7166),
                            Title = "Post 4"
                        },
                        new
                        {
                            Id = new Guid("6f15f67b-32df-4b06-b034-17a96896406a"),
                            Content = "Content 5",
                            CreationDate = new DateTime(2022, 11, 16, 14, 26, 59, 681, DateTimeKind.Local).AddTicks(7168),
                            Title = "Post 5"
                        });
                });

            modelBuilder.Entity("Model.Comment", b =>
                {
                    b.HasOne("Model.Post", "Post")
                        .WithMany("Comments")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Post");
                });

            modelBuilder.Entity("Model.Post", b =>
                {
                    b.Navigation("Comments");
                });
#pragma warning restore 612, 618
        }
    }
}
